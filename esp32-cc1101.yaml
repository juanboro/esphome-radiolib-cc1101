esphome:
  platformio_options:
    lib_ldf_mode: "deep+" # only necessary for arduino platform
  libraries:
    - RadioLib

external_components:
  - source:
      type: git
      url: https://github.com/juanboro/esphome-radiolib-cc1101

packages:
  cc1101_controls: !include cc1101-controls.yaml

spi:
  # these are the default VSPI pins to use on ESP32
  clk_pin: 18   # CC1001 pin 5
  mosi_pin: 23  # CC1001 pin 6
  miso_pin: 19  # CC1001 pin 7

# put remote_receiver first for ESP-IDF remote
remote_receiver:
  - id: rf_receiver
    idle: 10ms
    pin:
      number: 32 # This is also GDO0
      allow_other_uses: true
      id: cc1101_gd0_recv

    # ESP IDF new remote SPECIFIC 
    receive_symbols: 1024
#    dump: raw

remote_transmitter:
  - id: rf_transmitter
    pin:
      number: 32 # This is also GDO0
      allow_other_uses: true
      id: cc1101_gd0_xmit

    on_transmit:
      then:
        - lambda: |-
            id(mycc1101).xmit();
            //id(rf_transmitter).setup(); // currently necessary for legacy ESP-32 RMT (and doesn't work w/ new one either way)
    on_complete:
      then:
        - lambda: |-
            id(mycc1101).recv();
    carrier_duty_percent: 100%
    one_wire: true # new ESP-IDF remote code - one wire mode enables proper rx/tx loopback mode

radiolib_cc1101:
  id: mycc1101
  cs_pin: 5 # CC1101 pin 4

  # optionally define rx_pin to allow monitoring rx rssi
  rx_pin:
    number: 32 # This is CC1101 GDO0 pin 3
    allow_other_uses: true

#  other optional settings.. (use control settings to verify they work and then set)
  filter: 468khz # RX filter BW (58-812kHz)
  bitrate: 40 # bitrate (0.025-600kbps)
  reg_agcctrl0: 0xb2 # agcctrol0 register setting
  reg_agcctrl1: 0x00 # agcctrol1 register setting
  reg_agcctrl2: 0xc7 # agcctrol2 register setting

ota:
  platform: esphome
  on_begin:
    - lambda: id(mycc1101).standby();
