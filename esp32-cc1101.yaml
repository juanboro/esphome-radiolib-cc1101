substitutions: 
  cs:   "5"   # CC1101 pin 4
  clk:  "18"  # CC1101 pin 5
  mosi: "23"  # CC1101 pin 6
  miso: "19"  # CC1101 pin 7
  rx:   "32"  # CC1101 pin 3
  tx:   "32"  # CC1101 pin 3
  tx_rx_shared: "true"

external_components:
  - source: github://juanboro/esphome-radiolib-cc1101@main
    components: [ radiolib_cc1101 ]

packages:
  cc1101_controls: !include cc1101-controls.yaml

spi:
  # these are the default VSPI pins to use on ESP32
  clk_pin: $clk    # CC1101 pin 5
  mosi_pin: $mosi  # CC1101 pin 6
  miso_pin: $miso  # CC1101 pin 7

remote_receiver:
  - id: rf_receiver
    idle: 10ms
    filter: 20us # Some RF sources have pretty high BW - adjust as needed
    buffer_size: 2048 # This value is pretty large... default 10k is way too large
    pin:
      number: $rx
      allow_other_uses: true
      mode:
        output: false
        input: true
        pullup: $tx_rx_shared
        open_drain: false
      id: cc1101_gd0_recv

remote_transmitter:
  - id: rf_transmitter
    pin:
      number: $tx
      allow_other_uses: ${tx_rx_shared}
      mode: 
        output: true
        input: true
        pullup: true
        open_drain: true
      id: cc1101_gd0_xmit

    on_transmit:
      then:
        - lambda: |-
            id(mycc1101).xmit();
    on_complete:
      then:
        - lambda: |-
            id(mycc1101).recv();
    carrier_duty_percent: 100%

radiolib_cc1101:
  id: mycc1101
  cs_pin: 5 # CC1101 pin 4

  # optionally define rx_pin to allow monitoring rx rssi
  rx_pin:
    number: $rx # This is CC1101 GDO0 pin 3
    allow_other_uses: true

#  other optional settings.. (use control settings to verify they work and then set)
  filter: 468khz # RX filter BW (58-812kHz)
  bitrate: 10 # bitrate (0.025-600kbps)
  reg_agcctrl0: 0xb2 # agcctrol0 register setting
  reg_agcctrl1: 0x00 # agcctrol1 register setting
  reg_agcctrl2: 0xc7 # agcctrol2 register setting

# it's a good idea to turn off the CC1101 receiver when doing OTA updates
ota:
  platform: esphome
  on_begin:
    - lambda: id(mycc1101).standby();
